name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  # Make sure CI fails on all warnings, including Clippy lints
  RUSTFLAGS: "-Dwarnings"

jobs:

  test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo test --all-features

  # Check formatting with rustfmt
  formatting:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Ensure rustfmt is installed and setup problem matcher
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

  # Check warnings from clippy
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features

  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install FileCheck
        run: sudo apt install llvm-17-tools && sudo ln -s /usr/bin/FileCheck-17 /usr/bin/FileCheck
      - name: Build (debug)
        run: cargo build --verbose
      - name: Build (release)
        run: cargo build --release --verbose
      - name: Run cargo tests (release)
        run: cargo test --release --verbose
      - name: Run integration tests
        run: chmod +x runTests.sh && ./runTests.sh

  speed:
    name: Test Speed
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build (release)
        run: cargo build --release --verbose
      - name: Run integration tests (release, )
        run: time cargo run --release -- tests/hard_examples.txt
      - name: Run integration tests (release, proof gen)
        run: time cargo run --release -- tests/hard_examples.txt --verbose
      - name: Run comparator (release, proof gen)
        run: time cargo run --release -- tests/gate_compare.txt --verbose
      - name: Run comparator (release,)
        run: time cargo run --release -- tests/gate_compare.txt


  mdformat:
    name: Markdown format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Markdown check format
        uses: ydah/mdformat-action@main
        with:
          number: true
